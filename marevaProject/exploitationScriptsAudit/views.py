from django.shortcuts import render
from django.http import HttpResponse

from .forms import UploadResultatsScripts
from .models import Memory
from .static.exploitationScriptsAudit.scripts.parsingWinAudit.parsingHTML import ParsingHTML
from .models import *


def view_affichage_data(request):

    listeOrdinateurs = []
    
    for ligne in Ordinateur.objects.all():

        print('{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}\n{}'.format(ligne.Computer_Name, ligne.Domain_Name, ligne.Operating_System, ligne.Manufacturer, ligne.Model, ligne.Serial_Number, ligne.Processor_Description, ligne.Total_Memory, ligne.Total_Hard_Drive, ligne.BIOS_Version, ligne.User_Account))

        Computer_Name = ligne.Computer_Name
        Domain_Name = ligne.Domain_Name
        Operating_System = ligne.Operating_System
        Manufacturer = ligne.Manufacturer
        Model = ligne.Model
        Serial_Number = ligne.Serial_Number
        Processor_Description = ligne.Processor_Description
        Total_Memory = ligne.Total_Memory
        Total_Hard_Drive = ligne.Total_Hard_Drive
        BIOS_Version = ligne.BIOS_Version
        User_Account = ligne.User_Account

        print(Computer_Name)
        print(Domain_Name)
        print(Operating_System)
        print(Manufacturer)
        print(Model)
        print(Serial_Number)
        print(Processor_Description)
        print(Total_Memory)
        print(Total_Hard_Drive)
        print(BIOS_Version)
        print(User_Account)

    return render(request, 'exploitationScriptsAudit/affichage_data.html', locals())

def home(request):
    """ Exemple de page non valide au niveau HTML pour que l'exemple soit concis """
    return HttpResponse("""
        <h1>Bienvenue sur notre outil d'exploitation de scripts d'audit !</h1>
    """)

def view_Affichage_Memory(request):

    for ligne in Memory.objects.all():

        print('{}\n{}\n{}\n{}'.format(ligne.Total_Memory, ligne.Free_Memory, ligne.Maximum_Swap_File, ligne.Free_Swap_File))

        Total_Memory = int(ligne.Total_Memory[:-2])
        Free_Memory = int(ligne.Free_Memory[:-2])
        Maximum_Swap_File = int(ligne.Maximum_Swap_File[:-2])
        Free_Swap_File = ligne.Free_Swap_File

    return render(request, 'exploitationScriptsAudit/affichage_Memory.html', locals())

def view_Upload_Resultats_Scripts(request):
    
    form = UploadResultatsScripts(request.POST, request.FILES)

    if form.is_valid():

        scriptType = form.cleaned_data['scriptType']
        scriptFile = form.cleaned_data['scriptFile']

        print(scriptType)
        print(scriptFile)
        # print(scriptFile.read())


        resultats = ParsingHTML(scriptFile.read())
        resultats.parsing()
        # print(resultats.dictExtractParsing)
        # print(resultats.dictExtractParsing['Memoire'])

        # Ordinateur(Computer_Name='UCC85B76E7773D', Domain_Name='WORKGROUP', ...)

        ordinateur = Ordinateur(**resultats.dictExtractParsing['Ordinateur'])
        ordinateur.save()

        # # print(Ordinateur.objects.all())

        # # print(resultats.dictExtractParsing['Disque_Physique'])

        for disque in resultats.dictExtractParsing['Disque_Physique'].values():

            di = Disque_Physique(**disque, Ordinateur=ordinateur)
            # # Disque_Physique(Disk_Number=2, Model='WDC WD10SPZX-08Z10', ..., Ordinateur=ordinateur).save()
            # # Disk_Number=2, Model='WDC WD10SPZX-08Z10', ...
            # # {'Disk_Number': '2', 'Model': 'WDC WD10SPZX-08Z10', 'Serial_Number': 'WD-WX91EA70DY2W'}

            # print(disque)

            di.save()

        for tache in resultats.dictExtractParsing['Tache_Planifiee'].values():

            ta = Tache_Planifiee(**tache, Ordinateur=ordinateur)

            # print(tache)

            ta.save()

        ########### Insertion programme install√© #############

        for instal in resultats.dictExtractParsing['Programme_Installe'].values():

            print(instal)
            
            ins = Programme_Installe(**instal, Ordinateur=ordinateur)


            ins.save()
        
        ########### Insertion programme demarrage #############

        for dem in resultats.dictExtractParsing['Programme_Demarrage'].values():
    
            # print(dem)

            dm = Programme_Demarrage(**dem, Ordinateur=ordinateur)

            dm.save()

        ########### Insertion Utilisateur #############

        for user in resultats.dictExtractParsing['Utilisateur'].values():
            
            utili = Utilisateur(**user, Ordinateur=ordinateur)

            utili.save()

        ########### Insertion Groupe #############

        for grp in resultats.dictExtractParsing['Groupe'].values():

            gr = Groupe(**grp, Ordinateur=ordinateur)

            gr.save()
       

        Memory(**resultats.dictExtractParsing['Memoire'], Ordinateur=ordinateur).save()

        Version_Bios(**resultats.dictExtractParsing['Version_Bios'], Ordinateur=ordinateur).save()

        Systeme_Exploitation(**resultats.dictExtractParsing['Systeme_Exploitation'], Ordinateur=ordinateur).save()

    return render(request, 'exploitationScriptsAudit/upload_Resultats_Scripts.html', locals())

   
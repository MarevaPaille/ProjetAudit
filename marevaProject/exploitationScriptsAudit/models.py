from django.db import models

class Ordinateur(models.Model):

    Computer_Name = models.CharField(max_length=30)
    Domain_Name = models.CharField(max_length=50)
    Operating_System = models.CharField(max_length=70)
    Manufacturer = models.CharField(max_length=30)
    Model = models.CharField(max_length=30)
    Serial_Number = models.CharField(max_length=50)
    Processor_Description = models.CharField(max_length=100)
    Total_Memory = models.CharField(max_length=20)
    Total_Hard_Drive = models.CharField(max_length=20)
    BIOS_Version = models.CharField(max_length=30)
    User_Account = models.CharField(max_length=30)

    def __str__(self):

        """ 
        Cette méthode que nous définirons dans tous les modèles
        nous permettra de reconnaître facilement les différents objets que 
        nous traiterons plus tard dans l'administration
        """

        return self.Computer_Name

class Disque_Physique(models.Model):
    
    Disk_Number = models.CharField(max_length=100)
    Model = models.CharField(max_length=100)
    Serial_Number = models.CharField(max_length=100)
    Capacity = models.CharField(max_length=100)
    Ordinateur = models.ForeignKey(Ordinateur, on_delete=models.CASCADE, default=None)

class Memory(models.Model):

    Total_Memory = models.CharField(max_length=30)
    Free_Memory = models.CharField(max_length=30)
    Maximum_Swap_File = models.CharField(max_length=30)
    Free_Swap_File = models.CharField(max_length=30)
    Ordinateur = models.ForeignKey(Ordinateur, on_delete=models.CASCADE, default=None)

class Tache_Planifiee(models.Model):
    
    Task_Name = models.CharField(max_length=100)
    Status = models.CharField(max_length=30)
    Run_Command = models.CharField(max_length=30)
    Ordinateur = models.ForeignKey(Ordinateur, on_delete=models.CASCADE, default=None)

class Programme_Demarrage(models.Model):

    Program_Name = models.CharField(max_length=100, default=None)
    Settings_Folder = models.CharField(max_length=100, default=None)
    Command = models.CharField(max_length=100, default=None)
    Ordinateur = models.ForeignKey(Ordinateur, on_delete=models.CASCADE, default=None)

class Programme_Installe(models.Model):

    Name = models.CharField(max_length=100)
    Vendor = models.CharField(max_length=100)
    Version = models.CharField(max_length=100)
    Install_Location = models.CharField(max_length=100)
    Install_Source = models.CharField(max_length=100)
    Ordinateur = models.ForeignKey(Ordinateur, on_delete=models.CASCADE, default=None)

class Version_Bios(models.Model):

    SMBIOS_Version = models.CharField(max_length=30)
    BIOS_Vendor = models.CharField(max_length=30)
    BIOS_Version = models.CharField(max_length=30)
    ROM_Size = models.CharField(max_length=30)
    Ordinateur = models.ForeignKey(Ordinateur, on_delete=models.CASCADE, default=None)

class Systeme_Exploitation(models.Model):
    
    Name = models.CharField(max_length=100)
    Edition =  models.CharField(max_length=100)
    Install_Date = models.CharField(max_length=100)
    Registered_Owner = models.CharField(max_length=100)
    Operating_System_Language = models.CharField(max_length=100)
    Number_of_Bits = models.CharField(max_length=100)
    Ordinateur = models.ForeignKey(Ordinateur, on_delete=models.CASCADE, default=None)

class Utilisateur(models.Model):
    
    
    User_Account = models.CharField(max_length=100, default=None)
    Account_Status = models.CharField(max_length=100, default=None)
    Local_Groups = models.CharField(max_length=100, default=None)
    Last_Logon = models.CharField(max_length=100, default=None)
    Last_Logoff = models.CharField(max_length=100, default=None)
    Password_Age = models.CharField(max_length=100, default=None)
    Password_Expired = models.CharField(max_length=100, default=None)
    Ordinateur = models.ForeignKey(Ordinateur, on_delete=models.CASCADE, default=None)

    def __str__(self):
        return self.Account_Status

class Groupe(models.Model):

    Group_Type = models.CharField(max_length=30)
    Group_Name = models.CharField(max_length=30)
    Comment = models.CharField(max_length=30)
    Ordinateur = models.ForeignKey(Ordinateur, on_delete=models.CASCADE, default=None)

    def __str__(self):
        return self.Group_Name

